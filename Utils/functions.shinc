#--------------------------------------
# FUNCTIONS
function updatelog {
# Echoes passed string to LOGFILE and stdout
    logfn=$2

    echo `$DATE`": $1" 2>&1 | tee -a $logfn
}

function error_exit {
# Function for exit due to fatal program error
# Accepts 1 argument:
#   string containing descriptive error message
# Copied from - http://linuxcommand.org/wss0150.php
    echo "${PROGNAME}: ${1:-"Unknown Error"} ABORTING..." 1>&2
    exit 1
}

function chk_dependencies {
  for cmd in "${DEPENDENCIES_arr[@]}"; do
    command -v $cmd >/dev/null 2>&1 || \
      error_exit "I require ${cmd} but it's not installed."
  done
}

function get_time() {
  date |awk '{print $2$3"."$4}'
}

# collection of 'get_' routines used by POLLGC.sh
function get_rawUsed() {
# NOTE: parse 'ceph df' fields based on ceph version
  case $CEPHVER in
  
    luminous)
      rawUsed=`ceph df | head -n 3 | tail -n 1 | awk '{print $4}'`
      ;;
    nautilus)
      rawUsed=`ceph df | head -n 3 | tail -n 1 | awk '{print $10}'`
      ;;
    *)
      error_exit "unable to gather %RAW USED stats, exit..."
      ;;
    esac  
}

function get_pendingGC() {
  # get this stat when running RHCS 3.x builds or later
  if echo $CEPHVER | grep -q "jewel" ; then
      # Skip get_pendingGC for 2.5 versions
      pendingGC="N/A"
  else
      pendingGC=`radosgw-admin gc list --include-all | wc -l`
  fi
}

function get_upTime() {
  upTime=`ssh $RGWhostname uptime | awk -F'[a-z]:' '{ print $2}'`
}

function get_rgwMem() {
  rgwMem=`ssh $RGWhostname ps -eo comm,pcpu,pmem,vsz,rss | grep -w 'radosgw '`
}

function get_osdMem() {
# use ps v and capture %CPU and %MEM in one output, which we can then use to plot graph.
# $ ps  -eo pid,cmd,args | grep ceph | awk '{print $1}'  | xargs ps v
  osdMem=`ssh $RGWhostname ps -eo comm,pcpu,pmem,vsz,rss | grep -w 'ceph-osd '`
}

#
# END FUNCTIONS
#--------------------------------------
